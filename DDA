// https://cs.lmu.edu/~ray/notes/openglexamples/

#include "./freeglut-3.2.1/include/GL/freeglut.h"
#include <GL/glut.h>
#include <iostream>
#include <math.h>
using namespace std;

float x1;
float y3;
float x2;
float y2;

void display(void) {
	glClear(GL_COLOR_BUFFER_BIT);
	glLineWidth(1.0);
	glBegin(GL_POINTS);
	glColor3f(1, 0, 0);
	// float slope = (y2-y3)/(x2-x1);
	// float c = y3 - (slope*x1);
	float dx = x2 - x1;
	float dy = y2 - y3;
	float step;
	if (abs(dx) > abs(dy)) {
		step = abs(dx);
	} else {
		step = abs(dy);
	}

	float x_inc = dx / step;
	float y_inc = dy / step;

	float x = x1;
	float y = y3;

	for (int k = 1; k < step; k++) {
		glVertex2f(x, y);
		x = x + x_inc;
		y = y + y_inc;
	}
	glEnd();

	glFlush();
}

void myInit(void) {
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glColor3f(1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0, 400.0, 0.0, 400.0);
}

int main(int argc, char **argv) {
	cout << "Enter the value of x0: ";
	cin >> x1;
	cout << "Enter the value of y0: ";
	cin >> y3;
	cout << "Enter the value of x1: ";
	cin >> x2;
	cout << "Enter the value of y1: ";
	cin >> y2;
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(200, 300);
	glutInitWindowPosition(500, 100);
	glutCreateWindow("Line Algorithms");

	glutDisplayFunc(display);
	myInit();

	glutMainLoop();
}
